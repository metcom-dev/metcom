<?xml version="1.0" encoding="utf-8"?>
<odoo>

    <data noupdate="0">

        <record id="hr_payroll_structure_type_loans" model="hr.payroll.structure.type">
            <field name="name">Loans</field>
            <field name="country_id" ref="base.pe"/>
        </record>

        <record id="hr_payroll_structure_loans" model="hr.payroll.structure">
            <field name="name">Loans</field>
            <field name="type_id" ref="hr_loan_advance_other.hr_payroll_structure_type_loans"/>
            <field name="rule_ids" eval="[]"/>
            <field name="country_id" ref="base.pe"/>
        </record>

        <record id="hr_salary_rule_loan" model="hr.salary.rule">
            <field name="code">LO</field>
            <field name="name">Loan</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = inputs.LO.amount if inputs.dict.get('LO') else 0</field>
            <field name="appears_on_payslip" eval="True"/>
            <field name="sequence" eval="190"/>
            <field name="struct_id" ref="hr_loan_advance_other.hr_payroll_structure_loans"/>
        </record>

        <record id="hr_payslip_input_type_loan" model="hr.payslip.input.type">
            <field name="code">LO</field>
            <field name="name">Loan</field>
            <field name="country_id" ref="base.pe"/>
            <field name="struct_ids" eval="[(4, ref('hr_loan_advance_other.hr_payroll_structure_loans'))]"/>
        </record>

        <record id="hr_payslip_rule_advance" model="hr.salary.rule">
            <field name="code">SAR</field>
            <field name="name">Advance Salary</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = inputs.SAR.amount if inputs.dict.get('SAR') else 0</field>
            <field name="appears_on_payslip" eval="True"/>
            <field name="sequence" eval="190"/>
            <field name="struct_id" ref="hr_loan_advance_other.hr_payroll_structure_loans"/>
        </record>

        <record id="hr_payslip_input_type_advance" model="hr.payslip.input.type">
            <field name="code">SAR</field>
            <field name="name">Salary Advance</field>
            <field name="country_id" ref="base.pe"/>
            <field name="struct_ids" eval="[(4, ref('hr_loan_advance_other.hr_payroll_structure_loans'))]"/>
        </record>

        <record id="hr_salary_rule_other_discount" model="hr.salary.rule">
            <field name="code">ODE_001</field>
            <field name="name">Other discounts</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">result = inputs.ODE_001.amount if inputs.dict.get('ODE_001') else 0</field>
            <field name="appears_on_payslip" eval="True"/>
            <field name="sequence" eval="190"/>
            <field name="struct_id" ref="hr_loan_advance_other.hr_payroll_structure_loans"/>
        </record>

        <record id="hr_payslip_input_type_other_discount" model="hr.payslip.input.type">
            <field name="code">ODE_001</field>
            <field name="name">Other discounts</field>
            <field name="country_id" ref="base.pe"/>
            <field name="struct_ids" eval="[(4, ref('hr_loan_advance_other.hr_payroll_structure_loans'))]"/>
        </record>

        <record id="hr_salary_rule_loan_liquidation" model="hr.salary.rule">
            <field name="code">LO_002</field>
            <field name="name">Loan liquidation</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
if inputs.dict.get('LO_002') and inputs.dict.get('LO_002').amount > 0:
    result = inputs.LO_002.amount
else:
    employee_id = payslip.env['hr.employee'].browse(payslip.employee_id)
    payslip_id = payslip.env['hr.payslip'].browse(slip_id)
    domain = [
        ('employee_id', '=', employee_id.id),
        ('state', '=', 'approve'),
        ('contract_id', '=', payslip_id.contract_id.id)
    ]
    lon_obj = self.env['hr.loan'].search(domain)
    loan_line_ids = []
    for loan in lon_obj:
        loan_line_ids += loan.loan_lines.filtered(lambda x: not x.paid and payslip.struct_id == x.struct_id and x.receivable > 0)

    result = sum(loan_line.receivable for loan_line in loan_line_ids) if loan_line_ids else 0
            </field>
            <field name="appears_on_payslip" eval="True"/>
            <field name="sequence" eval="190"/>
            <field name="struct_id" ref="hr_loan_advance_other.hr_payroll_structure_loans"/>
        </record>

        <record id="hr_payslip_input_type_loan_liquidation" model="hr.payslip.input.type">
            <field name="code">LO_002</field>
            <field name="name">Loan liquidation</field>
            <field name="country_id" ref="base.pe"/>
            <field name="struct_ids" eval="[(4, ref('hr_loan_advance_other.hr_payroll_structure_loans'))]"/>
        </record>

        <record id="hr_salary_rule_other_discounts_liquidation" model="hr.salary.rule">
            <field name="code">ODE_002</field>
            <field name="name">Other discounts liquidation</field>
            <field name="category_id" ref="hr_payroll.DED"/>
            <field name="amount_select">code</field>
            <field name="amount_python_compute">
if inputs.dict.get('ODE_002') and inputs.dict.get('ODE_002').amount > 0:
    result = inputs.ODE_002.amount
else:
    employee_id = payslip.env['hr.employee'].browse(payslip.employee_id)
    payslip_id = payslip.env['hr.payslip'].browse(slip_id)
    domain = [
        ('employee_id', '=', employee_id.id),
        ('state', '=', 'approve'),
        ('contract_id', '=', payslip_id.contract_id.id)
    ]
    discount_obj = self.env['hr.other.discounts'].search(domain)
    dsc_line_ids = []
    for disc in discount_obj:
        dsc_line_ids += disc.discount_lines.filtered(lambda x: not x.paid and payslip.struct_id == x.struct_id and x.receivable > 0)

    result = sum(discount_line.receivable for discount_line in dsc_line_ids) if dsc_line_ids else 0
            </field>
            <field name="appears_on_payslip" eval="True"/>
            <field name="sequence" eval="190"/>
            <field name="struct_id" ref="hr_loan_advance_other.hr_payroll_structure_loans"/>
        </record>

        <record id="hr_payslip_input_type_other_discounts_liquidation" model="hr.payslip.input.type">
            <field name="code">ODE_002</field>
            <field name="name">Other discounts liquidation</field>
            <field name="country_id" ref="base.pe"/>
            <field name="struct_ids" eval="[(4, ref('hr_loan_advance_other.hr_payroll_structure_loans'))]"/>
        </record>

    </data>
</odoo>
